version: '3'
services:
    db:
        container_name: postgres
        environment:
            #POSTGRES_DB: $POSTGRES_DB
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
            POSTGRES_USER: $POSTGRES_USER
        image: postgres:13
        ports: 
            - 5432:5432
        volumes:
            - postgres-data:/var/lib/postgresql/data
    backend:
        container_name: garnet_backend
        environment:
            DB_USERNAME: $DB_USERNAME
            DB_PASSWORD: $DB_PASSWORD
            DB_NAME: $DB_NAME
            DB_HOST: $DB_HOST
            DB_TYPE: $DB_TYPE
            DB_LOGGING: $DB_LOGGING
            API_DOCUMENTATION_ENABLED: $API_DOCUMENTATION_ENABLED
            FRONTEND_URL: $FRONTEND_URL
            BACKEND_URL: $BACKEND_URL
            AUTH_JWT_EXPIRES_IN: $AUTH_JWT_EXPIRES_IN
            ENCRYPTION_KEY: $ENCRYPTION_KEY 
            AUTH_JWT_SECRET: $AUTH_JWT_SECRET
            AUTH_SOCIAL_GITHUB_CLIENT_ID: $AUTH_SOCIAL_GITHUB_CLIENT_ID
            AUTH_SOCIAL_GITHUB_CLIENT_SECRET: $AUTH_SOCIAL_GITHUB_CLIENT_SECRET
            AUTH_SOCIAL_GITHUB_CALLBACK_URL: $AUTH_SOCIAL_GITHUB_CALLBACK_URL
            TENANT_MODE: $TENANT_MODE
        image: garnetlabs/garnet-oss-backend:latest
        links:
            - db:db
        ports:
            - 8080:8080
        working_dir: /app
        command: npm start
    frontend:
        container_name: garnet_frontend
        image: garnetlabs/garnet-oss-frontend:latest
        ports:
            - 3000:3000
        working_dir: /app
        command: npm start
volumes:
    postgres-data: 